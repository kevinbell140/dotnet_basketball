@model NBAMvc1._1.ViewModels.FantasyLeagueDetailsViewModel;
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService


@{
    ViewData["Title"] = Model.FantasyLeague.Name;
}

    <div class="container container-fluid bg-white">
        <div class="row">
            <div class="col-md-12 text-center">
                <h3>@Model.FantasyLeague.Name</h3>
                @if ((await AuthorizationService.AuthorizeAsync(User, "AdminOnly")).Succeeded)
                {
                    <a asp-controller="FantasyMatchups" asp-action="Create" asp-route-leagueID="@Model.FantasyLeague.FantasyLeagueID" class="btn">Create schedule</a>
                    <span class="text-center" style="color:red">@TempData["NotSet"]</span>
                }
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                <span style="color:red">@(Model.FantasyLeague.IsFull == false ? "Open" : "Full")</span>
                @if (!Model.FantasyLeague.IsFull)
                {
                    <a asp-controller="MyTeams" asp-action="Create" asp-route-leagueID="@Model.FantasyLeague.FantasyLeagueID" class="btn btn-primary">Join</a>
                }
            </div>
            <div class="col-md-2">
                <span style="color:red">@(Model.FantasyLeague.IsSet == false ? "Not set" : "Set")</span>
            </div>
            <div class="col-md-4">
                <span style="color:red">Commissioner: @Model.FantasyLeague.ComissionerNav.UserName</span>
            </div>
            <div class="col-md-2">
                <span style="color:red">Current Week: @Model.CurrentWeek</span>
            </div>
        </div>
        <br />
        <div class="row">
            @if(!Model.FantasyLeague.IsActive)
            {
                @await Html.PartialAsync("_DetailsBefore", Model);
            }
            else
            {
                @await Html.PartialAsync("_DetailsAfter", Model);
            }
        </div>
    </div>

